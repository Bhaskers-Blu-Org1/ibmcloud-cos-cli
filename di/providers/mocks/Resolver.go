// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import endpoints "github.com/IBM/ibm-cos-sdk-go/aws/endpoints"
import mock "github.com/stretchr/testify/mock"

// Resolver is an autogenerated mock type for the Resolver type
type Resolver struct {
	mock.Mock
}

// EndpointFor provides a mock function with given fields: service, region, opts
func (_m *Resolver) EndpointFor(service string, region string, opts ...func(*endpoints.Options)) (endpoints.ResolvedEndpoint, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, service, region)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 endpoints.ResolvedEndpoint
	if rf, ok := ret.Get(0).(func(string, string, ...func(*endpoints.Options)) endpoints.ResolvedEndpoint); ok {
		r0 = rf(service, region, opts...)
	} else {
		r0 = ret.Get(0).(endpoints.ResolvedEndpoint)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string, ...func(*endpoints.Options)) error); ok {
		r1 = rf(service, region, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
